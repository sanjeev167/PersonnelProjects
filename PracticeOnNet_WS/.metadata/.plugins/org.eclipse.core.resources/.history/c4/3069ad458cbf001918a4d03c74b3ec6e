/**
 * 
 */
package com.admin.pvt.menu_mgr.dto;

import java.sql.Timestamp;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;

import com.custom.validation.classLevelValidator.ModuleRequiredWithTreeNodeType;
import com.custom.validation.classLevelValidator.PageAsALeafRequiredWithTreeNodeType;
import com.custom.validation.classLevelValidator.ParentNodeRequiredWithTreeNodeType;

/**
 * @author Sanjeev
 *
 */
@ParentNodeRequiredWithTreeNodeType(nodeType = "nodeType", parentNodeCount = "parentNodeCount", menuManagerParentNodeName = "menuManagerParentNodeName", menuManagerParentId = "menuManagerParentId",id="id", message = "Parent node is required.")

@ModuleRequiredWithTreeNodeType(nodeType = "nodeType", moduleId = "moduleId", message = "Module is required.")

@PageAsALeafRequiredWithTreeNodeType(nodeType = "nodeType", pageMasterId = "pageMasterId", message = "Leaf is required.")

public class RoleHierarchyDTO {

	private Integer id;
	@NotNull()
	@NotBlank(message = "Application context is required.")
	private String contextId;
	private String contextName;
	

	// @NotNull()
	// @NotBlank(message = "Select a head node.")
	private String headId;
	private String headName;

	@NotNull()
	@NotBlank(message = "Child name is required.")
	private String childName;    
	private String contents;
    private String activeC;
	private Integer totalrecords;

	private int headNodeCount;

	// Will be utilized by @Valid
	public RoleHierarchyDTO() {
	}

	// Will be utilized by grid
	public RoleHierarchyDTO(Integer id, String contextName,String headName, String childName,String contents, String activeC,int totalrecords) {
		this.id = id;
		this.contextName=contextName;		
		this.headName=headName;		
	    this.childName=childName;
	    this.contents=contents;
		this.activeC=activeC;
		this.totalrecords=totalrecords;

	}


}//End of RoleHierarchyDTO
