/**
 * 
 */
package com.admin.pvt.menu_mgr.dto;

import java.sql.Timestamp;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;

import com.custom.validation.classLevelValidator.ModuleRequiredWithTreeNodeType;
import com.custom.validation.classLevelValidator.PageAsALeafRequiredWithTreeNodeType;
import com.custom.validation.classLevelValidator.ParentNodeRequiredWithTreeNodeType;

/**
 * @author Sanjeev
 *
 */
@ParentNodeRequiredWithTreeNodeType(nodeType = "nodeType", parentNodeCount = "parentNodeCount", menuManagerParentNodeName = "menuManagerParentNodeName", menuManagerParentId = "menuManagerParentId",id="id", message = "Parent node is required.")

@ModuleRequiredWithTreeNodeType(nodeType = "nodeType", moduleId = "moduleId", message = "Module is required.")

@PageAsALeafRequiredWithTreeNodeType(nodeType = "nodeType", pageMasterId = "pageMasterId", message = "Leaf is required.")

public class RoleHierarchyDTO {

	private Integer id;
	@NotNull()
	@NotBlank(message = "Application context is required.")
	private String contextId;
	private String contextName;
	

	// @NotNull()
	// @NotBlank(message = "Select a head node.")
	private String headId;
	private String headName;

	@NotNull()
	@NotBlank(message = "Child name is required.")
	private String childNameId;   
	
	private String childName; 
	
	private String contents;
    private String activeC;
	private Integer totalrecords;

	private int headNodeCount;

	// Will be utilized by @Valid
	public RoleHierarchyDTO() {
	}

	// Will be utilized by grid
	public RoleHierarchyDTO(Integer id, String contextName,String headName, String childName,String contents, String activeC,int totalrecords) {
		this.id = id;
		this.contextName=contextName;		
		this.headName=headName;		
	    this.childName=childName;
	    this.contents=contents;
		this.activeC=activeC;
		this.totalrecords=totalrecords;

	}

	/**
	 * @return the id
	 */
	public Integer getId() {
		return id;
	}

	/**
	 * @param id the id to set
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * @return the contextId
	 */
	public String getContextId() {
		return contextId;
	}

	/**
	 * @param contextId the contextId to set
	 */
	public void setContextId(String contextId) {
		this.contextId = contextId;
	}

	/**
	 * @return the contextName
	 */
	public String getContextName() {
		return contextName;
	}

	/**
	 * @param contextName the contextName to set
	 */
	public void setContextName(String contextName) {
		this.contextName = contextName;
	}

	/**
	 * @return the headId
	 */
	public String getHeadId() {
		return headId;
	}

	/**
	 * @param headId the headId to set
	 */
	public void setHeadId(String headId) {
		this.headId = headId;
	}

	/**
	 * @return the headName
	 */
	public String getHeadName() {
		return headName;
	}

	/**
	 * @param headName the headName to set
	 */
	public void setHeadName(String headName) {
		this.headName = headName;
	}

	/**
	 * @return the childName
	 */
	public String getChildName() {
		return childName;
	}

	/**
	 * @param childName the childName to set
	 */
	public void setChildName(String childName) {
		this.childName = childName;
	}

	/**
	 * @return the contents
	 */
	public String getContents() {
		return contents;
	}

	/**
	 * @param contents the contents to set
	 */
	public void setContents(String contents) {
		this.contents = contents;
	}

	/**
	 * @return the activeC
	 */
	public String getActiveC() {
		return activeC;
	}

	/**
	 * @param activeC the activeC to set
	 */
	public void setActiveC(String activeC) {
		this.activeC = activeC;
	}

	/**
	 * @return the totalrecords
	 */
	public Integer getTotalrecords() {
		return totalrecords;
	}

	/**
	 * @param totalrecords the totalrecords to set
	 */
	public void setTotalrecords(Integer totalrecords) {
		this.totalrecords = totalrecords;
	}

	/**
	 * @return the headNodeCount
	 */
	public int getHeadNodeCount() {
		return headNodeCount;
	}

	/**
	 * @param headNodeCount the headNodeCount to set
	 */
	public void setHeadNodeCount(int headNodeCount) {
		this.headNodeCount = headNodeCount;
	}

	
	
	

}//End of RoleHierarchyDTO
