package com.admin.pub.en.entity;

import java.io.Serializable;
import javax.persistence.*;
import java.util.List;


/**
 * The persistent class for the module_master database table.
 * 
 */
@Entity
@Table(name="module_master")
@NamedQuery(name="ModuleMaster.findAll", query="SELECT m FROM ModuleMaster m")
public class ModuleMaster implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Integer id;

	private String name;

	//bi-directional many-to-one association to AclDomainMaster
	@OneToMany(mappedBy="moduleMaster")
	private List<AclDomainMaster> aclDomainMasters;

	//bi-directional many-to-one association to DepartmentMaster
	@ManyToOne
	@JoinColumn(name="department_id")
	private DepartmentMaster departmentMaster;

	//bi-directional many-to-one association to PageMaster
	@OneToMany(mappedBy="moduleMaster")
	private List<PageMaster> pageMasters;

	public ModuleMaster() {
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public List<AclDomainMaster> getAclDomainMasters() {
		return this.aclDomainMasters;
	}

	public void setAclDomainMasters(List<AclDomainMaster> aclDomainMasters) {
		this.aclDomainMasters = aclDomainMasters;
	}

	public AclDomainMaster addAclDomainMaster(AclDomainMaster aclDomainMaster) {
		getAclDomainMasters().add(aclDomainMaster);
		aclDomainMaster.setModuleMaster(this);

		return aclDomainMaster;
	}

	public AclDomainMaster removeAclDomainMaster(AclDomainMaster aclDomainMaster) {
		getAclDomainMasters().remove(aclDomainMaster);
		aclDomainMaster.setModuleMaster(null);

		return aclDomainMaster;
	}

	public DepartmentMaster getDepartmentMaster() {
		return this.departmentMaster;
	}

	public void setDepartmentMaster(DepartmentMaster departmentMaster) {
		this.departmentMaster = departmentMaster;
	}

	public List<PageMaster> getPageMasters() {
		return this.pageMasters;
	}

	public void setPageMasters(List<PageMaster> pageMasters) {
		this.pageMasters = pageMasters;
	}

	public PageMaster addPageMaster(PageMaster pageMaster) {
		getPageMasters().add(pageMaster);
		pageMaster.setModuleMaster(this);

		return pageMaster;
	}

	public PageMaster removePageMaster(PageMaster pageMaster) {
		getPageMasters().remove(pageMaster);
		pageMaster.setModuleMaster(null);

		return pageMaster;
	}

}