package com.admin.pub.en.entity;

import java.io.Serializable;
import javax.persistence.*;
import java.util.List;


/**
 * The persistent class for the access_rights_rbac database table.
 * 
 */
@Entity
@Table(name="access_rights_rbac")
@NamedQuery(name="AccessRightsRbac.findAll", query="SELECT a FROM AccessRightsRbac a")
public class AccessRightsRbac implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Integer id;

	//bi-directional many-to-one association to AppRole
	@ManyToOne
	@JoinColumn(name="role_id")
	private AppRole appRole;

	//bi-directional many-to-one association to PageMaster
	@ManyToOne
	@JoinColumn(name="page_id")
	private PageMaster pageMaster;

	//bi-directional many-to-one association to OperationAccess
	@OneToMany(mappedBy="accessRightsRbac")
	private List<OperationAccess> operationAccesses;

	public AccessRightsRbac() {
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public AppRole getAppRole() {
		return this.appRole;
	}

	public void setAppRole(AppRole appRole) {
		this.appRole = appRole;
	}

	public PageMaster getPageMaster() {
		return this.pageMaster;
	}

	public void setPageMaster(PageMaster pageMaster) {
		this.pageMaster = pageMaster;
	}

	public List<OperationAccess> getOperationAccesses() {
		return this.operationAccesses;
	}

	public void setOperationAccesses(List<OperationAccess> operationAccesses) {
		this.operationAccesses = operationAccesses;
	}

	public OperationAccess addOperationAccess(OperationAccess operationAccess) {
		getOperationAccesses().add(operationAccess);
		operationAccess.setAccessRightsRbac(this);

		return operationAccess;
	}

	public OperationAccess removeOperationAccess(OperationAccess operationAccess) {
		getOperationAccesses().remove(operationAccess);
		operationAccess.setAccessRightsRbac(null);

		return operationAccess;
	}

}